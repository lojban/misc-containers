--- exim.conf.upstream	2021-05-24 03:11:20.000000000 -0700
+++ exim.conf.mine	2022-07-18 19:47:52.256248227 -0700
@@ -36,6 +36,51 @@
 ########### IMPORTANT ########## IMPORTANT ########### IMPORTANT ###########
 
 
+### BEGIN LOCAL MODIFICATION
+
+## LOCAL NOTE 1:  Where this file comes from.
+#
+# The exim.conf patch file was generated in the spdrata account by running:
+# $ diff -u  /home/spdrata/scratch/exim.conf.upstream /home/spdrata/scratch/exim.conf.mine > misc/exim.conf.patch
+# , but it could easily be regenerated by making a copy of
+# /etc/exim/exim.conf in the Dockerfile before the patch is applied.
+
+## LOCAL NOTE 2: Logging
+#
+# There isn't really any way to get exim to log to stdout that isn't
+# annoying, but if you tell it to do syslog and /dev/log doesn't
+# exist, it'll fall back to /dev/console, which is OK
+#
+# (BUT SEE BELOW): Couldn't get symlinking the logs to /dev/stdout to work, probably
+# because of issues with dropping privs but /proc/self is owned by
+# the original UID.
+#
+# Another option would be to run exim in daemon mode and have "tail
+# -F ..." be the actual container command.
+#
+# exim -v and exim -dd both produce annoyingly-formatted logs.
+
+# Later on I was able to get the symlink to /dev/stdout to work, by running
+# chown as root; see containers/exim/config
+#
+# log_file_path = syslog
+
+log_file_path = /var/log/exim/%s.log
+log_timezone = true
+timezone = America/Los_Angeles
+
+# Don't ruin the whole server
+deliver_queue_load_max = 30
+queue_only_load = 25
+
+# Proxy from haproxy
+#
+# Note that this didn't used to work, but the slirp4netns in the
+# config seems to make it work?, no idea why
+hosts_proxy = 192.168.123.119
+
+###   END LOCAL MODIFICATION
+
 
 ######################################################################
 #                               MACROS                               #
@@ -67,9 +112,9 @@
 # +local_domains, +relay_to_domains, and +relay_from_hosts, respectively. They
 # are all colon-separated lists:
 
-domainlist local_domains = @ : localhost : localhost.localdomain
+domainlist local_domains = @ : localhost : localhost.localdomain : lojban.org : lojban.com : mail.lojban.org : mail.lojban.com
 domainlist relay_to_domains =
-hostlist   relay_from_hosts = localhost
+hostlist   relay_from_hosts = @[] : @ : 127.0.0.1 : 173.13.139.238/29 : 192.168.123.0/24 : ::1 : localhost
 # (We rely upon hostname resolution working for localhost, because the default
 # uncommented configuration needs to work in IPv4-only environments.)
 
@@ -138,7 +183,7 @@
 # of what to set for other virus scanners. The second modification is in the
 # acl_check_data access control list (see below).
 
-av_scanner = clamd:/var/run/clamd.exim/clamd.sock
+av_scanner = clamd:127.0.0.1 3310
 
 
 # For spam scanning, there is a similar option that defines the interface to
@@ -146,13 +191,7 @@
 # is shown in this commented example. As for virus scanning, you must also
 # modify the acl_check_data access control list to enable spam scanning.
 
-# spamd_address = 127.0.0.1 783
-
-
-# Set the default sqlite database file for greylisting. Uncomment this
-# if you use the greylisting ACLs defined below.
-
-# sqlite_dbfile = /var/spool/exim/db/greylist.db
+spamd_address = 127.0.0.1 25783
 
 
 # If Exim is compiled with support for TLS, you may want to enable the
@@ -188,8 +227,14 @@
 # them you should also allow TLS-on-connect on the traditional but
 # non-standard port 465.
 
-daemon_smtp_ports = 25 : 465 : 587
-tls_on_connect_ports = 465
+### BEGIN LOCAL MODIFICATION
+# We do not listen on 587 because port 25 and port 587 are both SMTP, they're
+# only different by convention; we don't have any rules to, like, mark stuff on
+# 587 as less likely to be spam or whatever.  So on the haproxy end, 25 and 587
+# both end up at 25.
+daemon_smtp_ports = 20225 : 20265
+tls_on_connect_ports = 20265
+### END LOCAL MODIFICATION
 
 
 # Specify the domain you want to be added to all unqualified addresses
@@ -318,9 +363,9 @@
 # Unless you run a high-volume site you probably want more logging
 # detail than the default.  Adjust to suit.
 
-log_selector = +smtp_protocol_error +smtp_syntax_error \
-        +tls_certificate_verified
-
+### BEGIN LOCAL MODIFICATION
+log_selector = +all -rejected_header
+###   END LOCAL MODIFICATION
 
 # If you want Exim to support the "percent hack" for certain domains,
 # uncomment the following line and provide a list of domains. The "percent
@@ -495,25 +540,9 @@
   accept  local_parts   = postmaster
           domains       = +local_domains
 
-  # Deny unless the sender address can be routed. For proper verification of the
-  # address, read the documentation on callouts and add the /callout modifier.
-
-  require verify        = sender
-
-  # Reject all RCPT commands after too many bad recipients
-  # This is partly a defense against spam abuse and partly attacker abuse.
-  # Real senders should manage, by the time they get to 10 RCPT directives,
-  # to have had at least half of them be real addresses.
-  #
-  # This is a lightweight check and can protect you against repeated
-  # invocations of more heavy-weight checks which would come after it.
-
-  deny    condition     = ${if and {\
-                        {>{$rcpt_count}{10}}\
-                        {<{$recipients_count}{${eval:$rcpt_count/2}}} }}
-          message       = Rejected for too many bad recipients
-          logwrite      = REJECT [$sender_host_address]: bad recipient count high [${eval:$rcpt_count-$recipients_count}]
-
+  ### BEGIN LOCAL MODIFICATION
+  # sender verify moved downwards; this is to allow emails from hosts we trust even if the sender appears to be bad (i.e. bot cron jobs and the like)
+  ###   END LOCAL MODIFICATION
   # Accept if the message comes from one of the hosts for which we are an
   # outgoing relay. It is assumed that such hosts are most likely to be MUAs,
   # so we set control=submission to make Exim treat the message as a
@@ -553,6 +582,28 @@
   require message       = nice hosts say HELO first
           condition     = ${if def:sender_helo_name}
 
+  ### BEGIN LOCAL MODIFICATION
+  # sender verify moved downwards; this is to allow emails from hosts we trust even if the sender appears to be bad (i.e. bot cron jobs and the like)
+  ###   END LOCAL MODIFICATION
+  # Deny unless the sender address can be routed. For proper verification of the
+  # address, read the documentation on callouts and add the /callout modifier.
+
+  require verify        = sender
+
+  # Reject all RCPT commands after too many bad recipients
+  # This is partly a defense against spam abuse and partly attacker abuse.
+  # Real senders should manage, by the time they get to 10 RCPT directives,
+  # to have had at least half of them be real addresses.
+  #
+  # This is a lightweight check and can protect you against repeated
+  # invocations of more heavy-weight checks which would come after it.
+
+  deny    condition     = ${if and {\
+                        {>{$rcpt_count}{10}}\
+                        {<{$recipients_count}{${eval:$rcpt_count/2}}} }}
+          message       = Rejected for too many bad recipients
+          logwrite      = REJECT [$sender_host_address]: bad recipient count high [${eval:$rcpt_count-$recipients_count}]
+
   # Insist that any other recipient address that we accept is either in one of
   # our local domains, or is in a domain for which we explicitly allow
   # relaying. Any other domain is rejected as being unacceptable for relaying.
@@ -651,12 +702,15 @@
 
 acl_check_data:
 
-  # Deny if the message contains an overlong line.  Per the standards
-  # we should never receive one such via SMTP.
-  #
-  deny    condition  = ${if > {$max_received_linelength}{998}}
-          message    = maximum allowed line length is 998 octets, \
-                       got $max_received_linelength
+  ### BEGIN LOCAL MODIFICATION
+  # Muni sends bad mail, apparently
+  ## # Deny if the message contains an overlong line.  Per the standards
+  ## # we should never receive one such via SMTP.
+  ## #
+  ## deny    condition  = ${if > {$max_received_linelength}{998}}
+  ##         message    = maximum allowed line length is 998 octets, \
+  ##                      got $max_received_linelength
+  ### END LOCAL MODIFICATION
 
   # Deny if the headers contain badly-formed addresses.
   #
@@ -680,11 +734,29 @@
   warn    condition  = ${if !def:h_Message-ID: {1}}
           set acl_m_greylistreasons = Message lacks Message-Id: header. Consult RFC2822.\n$acl_m_greylistreasons
 
+  ### BEGIN LOCAL MODIFICATION
+
+  # Don't try to send big messages through spamassassin/clamav; it's very
+  # expensive
+  accept  condition = ${if >={$message_size}{1500k}{yes}{no}}
+
+  # Don't bother to check spam status if it came from us
+  accept  hosts     = localhost
+
+  ###   END LOCAL MODIFICATION
+
+  # Alternatively if we're feeling more lenient we could just use it to 
+  # trigger greylisting instead:
+  # 
+  # warn    condition  = ${if !def:h_Message-ID: {1}}
+  #         set acl_m_greylistreasons = Message lacks Message-Id: header. Consult RFC2822.\n$acl_m_greylistreasons
+
   # Deny if the message contains a virus. Before enabling this check, you
   # must install a virus scanner and set the av_scanner option above.
-  #
-  # deny    malware    = *
-  #         message    = This message contains a virus ($malware_name).
+
+  deny    malware    = *
+          message    = This message contains a virus ($malware_name).
+          logwrite = DEBUG: virus reject from $sender_address to $recipients from host $sender_fullhost with mid $h_message-id and subject ${quote:$h_subject:}
 
   # Bypass SpamAssassin checks if the message is too large.
   #
@@ -707,23 +779,32 @@
   # and accept the mail if that happens. Add an X-Spam-Flag: header if the SA
   # score exceeds the SA system threshold.
   #
-  # warn    spam       = nobody/defer_ok
-  #         add_header = X-Spam-Flag: YES
-  #
-  # accept  condition  = ${if !def:spam_score_int {1}}
-  #         add_header = X-Spam-Note: SpamAssassin invocation failed
-  #
-
+  warn    spam       = nobody/defer_ok
+          add_header = X-Spam-Flag: YES
+  
+  accept  condition  = ${if !def:spam_score_int {1}}
+          add_header = X-Spam-Note: SpamAssassin invocation failed
+  
+  
   # Unconditionally add score and report headers
-  #
-  # warn    add_header = X-Spam-Score: $spam_score ($spam_bar)\n\
-  #                      X-Spam-Report: $spam_report
 
-  # And reject if the SpamAssassin score is greater than ten
-  #
-  # deny    condition = ${if >{$spam_score_int}{100} {1}}
-  #         message   = Your message scored $spam_score SpamAssassin point. Report follows:\n\
-  #  	    	        $spam_report
+  ### BEGIN LOCAL MODIFICATION
+  warn    add_header = X-Spam-Score: $spam_score ($spam_bar)\n\
+                       X-Spam_score: $spam_score\n\
+                       X-Spam_score_int: $spam_score_int\n\
+                       X-Spam_bar: $spam_bar
+
+  warn    condition = ${if >{$spam_score_int}{0}{1}{0}}
+          add_header = X-Spam-Report: $spam_report
+
+  # And reject if the SpamAssassin score is greater than 5
+
+  deny    condition = ${if >{$spam_score_int}{50} {1}}
+          logwrite = DEBUG: spamassassin reject from $sender_address to $recipients from host $sender_fullhost with mid $h_message-id and subject ${quote:$h_subject:}
+          message   = Your message scored $spam_score SpamAssassin point. Report follows:\n\
+   	    	        $spam_report
+
+  ###   END LOCAL MODIFICATION
 
   # Trigger greylisting (if enabled) if the SpamAssassin score is greater than 0.5
   #
@@ -758,6 +839,7 @@
                         {${lc:$mime_filename}} \
                         {\N(\.exe|\.pif|\.bat|\.scr|\.lnk|\.com)$\N} \
                      {1}{0}}
+       logwrite = DEBUG: bad mime file extension reject from $sender_address to $recipients from host $sender_fullhost with mid $h_message-id and subject ${quote:$h_subject:}
 
   accept
 
@@ -823,7 +905,7 @@
   driver = dnslookup
   domains = ! +local_domains
   transport = remote_smtp
-  ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8
+  ignore_target_hosts = 0.0.0.0 : 127.0.0.0/8 : 192.168.123.0/24 : 10.0.0.0/8
 # if ipv6-enabled then instead use:
 # ignore_target_hosts = <; 0.0.0.0 ; 127.0.0.0/8 ; ::1
   no_more
@@ -858,12 +940,16 @@
 # to set up different ones for pipe and file deliveries from aliases.
 
 system_aliases:
+  debug_print = "R: system_aliases for $local_part@$domain_data"
   driver = redirect
   allow_fail
   allow_defer
   data = ${lookup{$local_part}lsearch{/etc/aliases}}
 # user = exim
   file_transport = address_file
+### BEGIN LOCAL MODIFICATION
+  directory_transport = address_directory
+###   END LOCAL MODIFICATION
   pipe_transport = address_pipe
 
 
@@ -894,22 +980,34 @@
 # up an auto-reply, respectively.
 
 userforward:
+  debug_print = "R: userforward for $local_part_data , $home"
   driver = redirect
   check_local_user
-# local_part_suffix = +* : -*
-# local_part_suffix_optional
+### BEGIN LOCAL MODIFICATION
+  local_part_suffix = +* : -*
+  local_part_suffix_optional
+### END LOCAL MODIFICATION
   file = $home/.forward
   allow_filter
   no_verify
   no_expn
   check_ancestor
   file_transport = address_file
+### BEGIN LOCAL MODIFICATION
+  directory_transport = address_directory
+###   END LOCAL MODIFICATION
   pipe_transport = address_pipe
   reply_transport = address_reply
 
 procmail:
+  debug_print = "R: procmail for $local_part"
   driver = accept
   check_local_user
+### BEGIN LOCAL MODIFICATION
+# Now with plus-signed address delivery.
+  local_part_suffix = +* : -*
+  local_part_suffix_optional
+### END LOCAL MODIFICATION
   require_files = ${local_part}:+${home}/.procmailrc:/usr/bin/procmail
   transport = procmail
   no_verify
@@ -923,13 +1021,30 @@
 # in the same way as xxxx@your.domain by this router.
 
 localuser:
+  debug_print = "R: localuser for $local_part_data"
   driver = accept
   check_local_user
-# local_part_suffix = +* : -*
-# local_part_suffix_optional
+### BEGIN LOCAL MODIFICATION
+  local_part_suffix = +* : -*
+  local_part_suffix_optional
+### END LOCAL MODIFICATION
   transport = local_delivery
   cannot_route_message = Unknown user
 
+### BEGIN LOCAL MODIFICATION
+# We need to do a second pass to handle the * aliases
+system_aliases_again:
+  debug_print = "R: system_aliases for $local_part@$domain_data"
+  driver = redirect
+  allow_fail
+  allow_defer
+  domains = +local_domains
+  data = ${lookup{$local_part}lsearch{/etc/aliases}}
+  headers_add = X-alias-redirect: Redirected to ${lookup{$local_part}lsearch{/etc/aliases}} from $original_local_part
+  file_transport = address_file
+  directory_transport = address_directory
+  pipe_transport = address_pipe
+###   END LOCAL MODIFICATION
 
 
 ######################################################################
@@ -952,25 +1067,33 @@
 
 remote_smtp:
   driver = smtp
-  message_size_limit = ${if > {$max_received_linelength}{998} {1}{0}}
-
-# This transport is used for delivering messages over SMTP using the
-# "message submission" port (RFC4409).
-
-remote_msa:
-  driver = smtp
-  port = 587
-  hosts_require_auth = *
-
+  ### BEGIN LOCAL MODIFICATION
+  # Muni sends bad mail, apparently
+  # message_size_limit = ${if > {$max_received_linelength}{998} {1}{0}}
+  #
+  # Docker hosts look bad for HELO
+  helo_data = mail.lojban.org
+
+  # DKIM
+  dkim_domain = lojban.org
+  dkim_selector = 202111020436
+  dkim_private_key = /etc/exim/dkim.private
+  dkim_canon = relaxed
+  ### END LOCAL MODIFICATION
 
 # This transport invokes procmail to deliver mail
 procmail:
+  debug_print = "T: procmail for $local_part_data@$domain_data"
   driver = pipe
-  command = "/usr/bin/procmail -d $local_part"
+  ### BEGIN LOCAL MODIFICATION
+  command = "/usr/bin/procmail -d $local_part_data"
+  ### END LOCAL MODIFICATION
   return_path_add
   delivery_date_add
   envelope_to_add
-  user = $local_part
+  ### BEGIN LOCAL MODIFICATION
+  user = $local_part_data
+  ### END LOCAL MODIFICATION
   initgroups
   return_output
 
@@ -983,7 +1106,13 @@
 
 smarthost_smtp:
   driver = smtp
-  message_size_limit = ${if > {$max_received_linelength}{998} {1}{0}}
+  ### BEGIN LOCAL MODIFICATION
+  # Muni sends bad mail, apparently
+  # message_size_limit = ${if > {$max_received_linelength}{998} {1}{0}}
+  #
+  # Docker hosts look bad for HELO
+  helo_data = mail.lojban.org
+  ### END LOCAL MODIFICATION
   multi_domain
   #
 .ifdef _HAVE_TLS
@@ -1020,8 +1149,12 @@
 # show how this can be done.
 
 local_delivery:
+  debug_print = "T: local_delivery for $local_part_data"
   driver = appendfile
-  file = /var/mail/$local_part_data
+###   BEGIN LOCAL MODIFICATION
+  maildir_format = true
+  directory = /var/mail/$local_part_data
+###   END LOCAL MODIFICATION
   delivery_date_add
   envelope_to_add
   return_path_add
@@ -1038,8 +1171,18 @@
 # section above.
 
 address_pipe:
+  debug_print = "T: address_pipe for $local_part_data@$domain_data"
   driver = pipe
-  return_output
+### BEGIN LOCAL MODIFICATION
+  return_fail_output
+  user = nobody
+  timeout = 1h
+  max_output = 512K
+  path = /usr/bin:/bin:/usr/local/bin
+  delivery_date_add
+  envelope_to_add
+  return_path_add
+###   END LOCAL MODIFICATION
 
 
 # This transport is used for handling deliveries directly to files that are
@@ -1051,6 +1194,15 @@
   envelope_to_add
   return_path_add
 
+### BEGIN LOCAL MODIFICATION
+address_directory:
+  driver = appendfile
+  delivery_date_add
+  envelope_to_add
+  return_path_add
+  maildir_format = true
+###   END LOCAL MODIFICATION
+
 
 # This transport is used for handling autoreplies generated by the filtering
 # option of the userforward router.
